{
    "logo":"Option to change application logo to your company logo. In addition, sent mail will also contain your company logo.",
    "messageBefore":"This is message that send to signer to sign document.\n Message can contain [DOCUMENT_NAME] placeholder that will be replace by actual document name,  and must contain [LINK] placeholder that will be replace by actual link for singing.",
    "messageBeforeHebrew":"This is message that send to signer to sign document.\n Message can contain [DOCUMENT_NAME] placeholder that will be replace by actual document name,  and must contain [LINK] placeholder that will be replace by actual link for singing.",
    "messageAfter":"This is message that send to signer after he signing. Message can contain [DOCUMENT_NAME] placeholder that will be replace by actual document name.",
    "messageAfterHebrew":"This is message that send to signer after he signing. Message can contain [DOCUMENT_NAME] placeholder that will be replace by actual document name.",
    "htmlTemplateBeforeSigning" : "Option to upload your HTML email body for customer signing request. Template must contain following place holders : [DOCUMENT_LINK_URL], and can contain following place holders: [CLIENT_NAME_TEXT] ",
    "htmlTemplateAfterSigning" : "Option to upload your HTML email body that will send to customer after he signed. Template can contain following place holders : [CLIENT_NAME_TEXT], [DOCUMENT_LINK_URL]",
    "adHost":"Active Directory Host URL",
    "adPort":"Please Select Secured port (636) or Unsecured port (389)",
    "adContainer":"Active Directory container for example: dc=xxxxxx,dc=yyy,dc=zzz",
    "adDomain":"Active Directory domain for example: MyDomain.co.il",
    "adUser":"Insert Active Directory user with reading groups and users privileges",
    "adPassword":"Insert selected user Active Directory password",

    "daysToDeleteSignedDoc":"Select Interval for deleting documents in status signed from the system or choose 'Never' for saving documents - for Best Practice choose 30 days interval",
    "daysToDeleteUnsinedDoc":"Select Interval for deleting documents in status sent/Rejected from the system or choose 'Never' for saving documents - for Best Practice choose 15 days interval",
    "defaultSMSFrom":"Choose Name the client will see while get SMS. In case 'InforUMobile' provider is selected, use the name given by the company",
    "defaultSMSFromPassword":"Provider Password",
    "defaultSMSFromProvider":"Select Provider- Goldman/Twilio/Infro/Partner/Notyfy/Telemessage/Micropay",
    "defaultSMSFromUser":"Provider User",    
    "defaultSMTPSSL":"Is SMTP Use SSL (In case using Office365 you should set it to true)",
    "defaultSMTPFrom":"Choose Email , the addressee will get Email from the selected email",
    "defaultSMTPServer":"SMTP Server/Service Address/URL",
    "defaultSMTPPort":"SMTP port - Default port = 25  (In case using Office365 you should set it to 587)",
    "defaultSMTPUser":"Add user with privilage if SMTP service requires it (In case of office365 'User' and 'From' parameters should be the same value)",
    "defaultSMTPPassword":"Add password for selected user if SMTP service requires it",
    "defaultSMTPMaxAttachmentSize": "Add limitation for file size ad attachment - default 8Mb",
    "logsDeleteInterval":"Select Interval for deleting old logs or choose 'Never' for save logs - for Best Practice choose 30 days interval",
    "useOTPForManagmentSite":"Add Two Factor Authentication for user Management Site (this site)",
    "enableFreeTrileUsers":"Allow Unregistered users to register as free trial users",
    "enableTabletsSupport":"Allow application to send documents to company tablets",
    "signer1Endpoint" : "Signer1 web service endpoint of your organization for server signature. For example: https://signer1.comsign.co.il/signature/signature.svc",
    "shouldUseReCaptchaInRegistration" : "Force ReCaptcha authentication while users register",
    "signer1User":"Optional parameter, you need to enter data while signer1 is config to be authorize by user and password",
    "signer1Password":"Optional parameter, you need to enter data while signer1 is config to be authorize by user and password",
    "enableSigner1ExtraSigningTypes" : "Allow to singing documents using signer1 extra signing options. For example - singing xlsx, xml, word files , etc",
    "enableShowSSOOnlyInUserUI":"In user front only the SSO button will be Active",
    "htmlTemplateFile": "All html inputs ids and signature image id should be same as PDF fields names, in case of radio group the name of radio inputs should be the same as PDF radio group name",
    "jsTemplateFile": "In order to done process you should add following line to submit function - 'document.getElementById('doneProcessButton').click();'. In order to open sign pad you should add following lines : 'document.getElementById('openSignaturePad').innerHTML = sigName; document.getElementById('openSignaturePad').click();' ",
    "shouldSendWithOTPByDefault" :"When this option is selected- when the user will send a document for signing the OTP option will be selected automatically for all the signers, the user can unselect this option manually.",
    "enableVisualIdentityFlow": "When this option is enabled the user can authenticate his signers using the ComSign IDP",
    "enableDisplaySignerNameInSignature": "When this option is enabled the signer can view his name in the signature",
    "enablePersonalizedPFX": "When this option is enabled the users of the company will sign with their companies personalized PFX signature that will include user and company specific details",
    "enableReminders": "Enables the ability to configure and send automatic sign reminders for unsigned documents",
    "disableUserReminderControl": "By choosing this option, you will set the sign reminder configuration for all of the company users",
    "externalPDFServiceURL": "external PDF web service endpoint of where the service installed.",
    "externalPDFServiceAPIKey": "external PDF web service API key to connect successfully with the external api service.",
    "historyIntegratorServiceURL": "History integrator web service endpoint of where the service installed.",
    "historyIntegratorServiceAPIKey": "History integrator web service API key to connect successfully with the history integrator service.",
    "signReminderFrequency": "Set the frequency of sending sign reminders for all of the users in the company",
    "enableDocumentNotifications": "Enable sending document notifications to a pre-set endpoint",
    "documentNotificationsEndpoint": "Enter the endpoint to send document notifications to",
    "shouldUseSignerAuth" : "Allow the use of internal authentication to validate signer's identity",
    "shouldUseSignerAuthDefault" : "Use internal authentication by default",
    "useExternalGraphicSignature" : "Set if you want to sign all the graphic signatures in application using an external signerOne case not it will sign all signature using internal Pfx certificate",
    "externalGraphicSignatureSigner1Url": "The URL of the signerOne where to sign all the graphic signatures need to put the REST URL",
    "externalGraphicSignatureCert" : "The certificate in the signerOne to use to sign all the graphic signatures",
    "externalGraphicSignaturePin":"The certificate password in the signerOne to use to sign all the graphic signatures",
    "shouldForceOTPInLogin":"Force the user for OTP in login if try to login with email/userName and password",
    "shouldEnableMeaningOfSignatureOption":"When this option is enabled, the user can ask a signer for the meaning of signature",
    "shouldAddAppendicesAttachmentsToSendMail":"When this option is enabled appendices will be attached as a file to the email sent to the recipients",
    "shouldEnableVideoConference":"When this option is enabled, the user can add a video conference to the signing process"

}
