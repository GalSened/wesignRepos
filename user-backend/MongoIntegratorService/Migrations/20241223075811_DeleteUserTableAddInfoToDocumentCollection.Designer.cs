// <auto-generated />
using System;
using HistoryIntegratorService.DAL.Connectors;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HistoryIntegratorService.Migrations
{
    [DbContext(typeof(MsSqlConnector))]
    [Migration("20241223075811_DeleteUserTableAddInfoToDocumentCollection")]
    partial class DeleteUserTableAddInfoToDocumentCollection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HistoryIntegratorService.DAL.DAOs.Documents.DeletedDocumentCollectionDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DistributionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DocumentStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DeletedDocumentCollections");
                });

            modelBuilder.Entity("HistoryIntegratorService.DAL.DAOs.Documents.DeletedDocumentDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedDocumentCollectionDAOId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DeletedDocumentCollectionDAOId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("HistoryIntegratorService.DAL.DAOs.Templates.TemplateDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("HistoryIntegratorService.DAL.DAOs.Templates.TemplateSignatureFieldDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SignatureFieldType")
                        .HasColumnType("int");

                    b.Property<Guid?>("TemplateDAOId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TemplateDAOId");

                    b.ToTable("TemplateSignatureFields");
                });

            modelBuilder.Entity("HistoryIntegratorService.DAL.DAOs.Documents.DeletedDocumentDAO", b =>
                {
                    b.HasOne("HistoryIntegratorService.DAL.DAOs.Documents.DeletedDocumentCollectionDAO", null)
                        .WithMany("Documents")
                        .HasForeignKey("DeletedDocumentCollectionDAOId");

                    b.HasOne("HistoryIntegratorService.DAL.DAOs.Templates.TemplateDAO", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("HistoryIntegratorService.DAL.DAOs.Templates.TemplateSignatureFieldDAO", b =>
                {
                    b.HasOne("HistoryIntegratorService.DAL.DAOs.Templates.TemplateDAO", null)
                        .WithMany("TemplateSignatureFields")
                        .HasForeignKey("TemplateDAOId");
                });

            modelBuilder.Entity("HistoryIntegratorService.DAL.DAOs.Documents.DeletedDocumentCollectionDAO", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("HistoryIntegratorService.DAL.DAOs.Templates.TemplateDAO", b =>
                {
                    b.Navigation("TemplateSignatureFields");
                });
#pragma warning restore 612, 618
        }
    }
}
